output  = "../outputs/arrete-cassis.gpkg",
wkt_col = "X_GEOM_WKT")
source("../helpers/imports/geocode.R", encoding = "UTF-8")
input  <- "../outputs/arrete-cassis2.csv" # CSV géocodé
file.exists(input)
arrete2gpkg(input   = input,
output  = "../outputs/arrete-cassis.gpkg",
geom_col = "X_GEOM_WKT")
sf_rues <- read_streets("../data/13022-Cassis.geojson")
sf_rues$name
sf_rues <- read_streets("../data/13022-Cassis.geojson")
get_rues(sf_rues, "Chemain du Plan d'Ollive")
sf_rues <- read_streets("../data/13022-Cassis.geojson")
res <- get_rues(sf_rues, "Chemain du Plan d'Ollive")
wkt <- res$wkt
distance <- res$distance
print(wkt)
street <- "Chemain du Plan d'Ollive, Charles de Gaulle"
street <- "Chemain du Plan d'Ollive, Charles de Gaulle"
strsplit(street, ",")[[1]]
strsplit(street, ",")[[1]] %>% trimws(which="both")
street <- strsplit(street, ",")[[1]] %>% trimws(which="both")
street
res <- get_rues(sf_rues, street)
res
geocodeStreet <- function(street, streetsFile) {
if(!file.exists(streetsFile)) {
stop("Fichier de rues ,", streetsFile, " inexistant")
}
SearchAndRender <- function(street, sf_rues) {
message(">> Géométrie de la rue ", street, " :")
res <- get_rues(sf_rues, street)
wkt <- res$wkt
distance <- res$distance
message(wkt)
}
sf_rues <- read_streets(streetsFile)
if(grepl(",", street)) {
streets <- strsplit(street, ",")[[1]] %>% trimws(which="both")
for(street in streets) {
SearchAndRender(street, sf_rues)
}
} else {
SearchAndRender(street, sf_rues)
}
}
geocodeStreet(street = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
geocodeStreet(street = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/imports/markdown.R")
source("../helpers/imports/opening-hours.R")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../helpers/imports/geocode.R", encoding = "UTF-8")
input  <- "../outputs/arrete-cassis2.csv" # CSV géocodé
file.exists(input)
CSV2GPKG(input   = input,
output  = "../outputs/arrete-cassis.gpkg",
geom_col = "X_GEOM_WKT")
source("../helpers/imports/markdown.R")
source("../helpers/imports/opening-hours.R")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../helpers/imports/markdown.R")
source("../helpers/imports/opening-hours.R")
CSV2MD(input  = inputCSV,
output = "../outputs/arrete-cassis.md")
source("../helpers/imports/markdown.R")
source("../helpers/imports/opening-hours.R")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../helpers/imports/geocode.R")
inputCSV <- "../../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv"
file.exists(inputCSV)
# streets <- "https://raw.githubusercontent.com/mrajerisonCerema/streets-as-geojson/master/OSM/PROVENCE%20ALPES%20COTE%20D%20AZUR/13022-Cassis.geojson"
streets <- "../data/13022-Cassis.geojson"
file.exists(streets)
geocodeCSV(input   = inputCSV,
streets = streets,
output  = "../outputs/arrete-cassis2.csv")
source("../helpers/imports/geocode.R")
inputCSV <- "../../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv"
file.exists(inputCSV)
# streets <- "https://raw.githubusercontent.com/mrajerisonCerema/streets-as-geojson/master/OSM/PROVENCE%20ALPES%20COTE%20D%20AZUR/13022-Cassis.geojson"
streets <- "../data/13022-Cassis.geojson"
file.exists(streets)
geocodeCSV(input   = inputCSV,
streets = streets,
output  = "../outputs/arrete-cassis2.csv")
source("../helpers/main.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chemain du Plan d'Ollive, Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chemain du Plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chem. du Plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../helpers/imports/geocode.R")
geocodeStreet(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaulle",
streetsFile = "../data/13022-Cassis.geojson")
rm(list=ls())
library(tidyverse)
library(sf)
library(geojsonsf)
library(stringdist)
library(glue)
library(jsonlite)
library(stringi)
library(lubridate)
library(shiny)
source("../../groum-groum/src/shinyapp/helpers/main.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/libraries.R", encoding="UTF-8")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaule",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street = "commune de Cassis")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street     = "Chem. du plan d'Ollive, commune de Cassis",
streetsFile = "../data/13022-Cassis.geojson")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV <- "../../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv"
file.exists(inputCSV)
# streets <- "https://raw.githubusercontent.com/mrajerisonCerema/streets-as-geojson/master/OSM/PROVENCE%20ALPES%20COTE%20D%20AZUR/13022-Cassis.geojson"
streets <- "../data/13022-Cassis.geojson"
file.exists(streets)
geocode_CSV(inputCSV  = inputCSV,
streets   = streets,
outputCSV = "../outputs/arrete-cassis2.csv")
read.csv("../outputs/arrete-cassis2.csv", sep=",", encoding = "UTF-8") %>% names
source("../../groum-groum/src/shinyapp/helpers/markdown.R")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R")
CSV2MD(input  = inputCSV,
output = "../outputs/arrete-cassis.md")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV  <- "../outputs/arrete-cassis2.csv" # CSV géocodé
file.exists(input)
library(tidyverse)
library(sf)
library(geojsonsf)
library(stringdist)
library(glue)
library(jsonlite)
library(stringi)
library(lubridate)
library(shiny)
source("../../groum-groum/src/shinyapp/helpers/main.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/libraries.R", encoding="UTF-8")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaule",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street = "commune de Cassis")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street     = "Chem. du plan d'Ollive, commune de Cassis",
streetsFile = "../data/13022-Cassis.geojson")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV <- "../../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv"
file.exists(inputCSV)
# streets <- "https://raw.githubusercontent.com/mrajerisonCerema/streets-as-geojson/master/OSM/PROVENCE%20ALPES%20COTE%20D%20AZUR/13022-Cassis.geojson"
streets <- "../data/13022-Cassis.geojson"
file.exists(streets)
geocode_CSV(inputCSV  = inputCSV,
streets   = streets,
outputCSV = "../outputs/arrete-cassis2.csv")
read.csv("../outputs/arrete-cassis2.csv", sep=",", encoding = "UTF-8") %>% names
source("../../groum-groum/src/shinyapp/helpers/markdown.R")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R")
CSV2MD(input  = inputCSV,
output = "../outputs/arrete-cassis.md")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV  <- "../outputs/arrete-cassis2.csv" # CSV géocodé
file.exists(inputCSV)
CSV2GPKG(inputCSV   = inputCSV,
outputGPKG = "../outputs/arrete-cassis.gpkg",
geomCol    = "X_GEOM_WKT")
f <- read_arrete(inputCSV)
inputCSV  <- "../outputs/arrete-cassis.csv" # CSV géocodé
f <- read_arrete(inputCSV)
inputCSV  <- "../data/arrete-cassis.csv" # CSV géocodé
f <- read_arrete(inputCSV)
f
html <- f %>% renderArreteOfficial()
writeLines("../outputs/test.html")
writeLines(html, "../outputs/test.html")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
setwd("C:/Users/mathieu.rajerison/Desktop/TAFF_MAISON/GIT/groum")
# Copie des fonctions
file.copy("../groum-groum/src/shinyapp/libraries.R",
file.path("helpers/imports", "libraries.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/main.R",
file.path("helpers/imports", "main.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/markdown.R",
file.path("helpers/imports", "markdown.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/opening-hours.R",
file.path("helpers/imports", "opening-hours.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/geocode.R",
file.path("helpers/imports", "geocode.R"),
overwrite = T)
# Copie du schéma
file.copy("../schema-arrete-circulation-marchandises/schema.json",
file.path("data", "schema.json"),
overwrite = T)
# Copie des données
file.copy("../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv",
file.path("data", "arrete-cassis.csv"),
overwrite = T)
# Copie du JSON de rues
file.copy("../schema-arrete-circulation-marchandises-private/Cassis/13022-Cassis.geojson",
file.path(dataDir, "13022-Cassis.geojson"),
overwrite = T)
setwd("C:/Users/mathieu.rajerison/Desktop/TAFF_MAISON/GIT/groum")
# Copie des fonctions
file.copy("../groum-groum/src/shinyapp/libraries.R",
file.path("helpers/imports", "libraries.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/main.R",
file.path("helpers/imports", "main.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/markdown.R",
file.path("helpers/imports", "markdown.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/opening-hours.R",
file.path("helpers/imports", "opening-hours.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/geocode.R",
file.path("helpers/imports", "geocode.R"),
overwrite = T)
# Copie du schéma
file.copy("../schema-arrete-circulation-marchandises/schema.json",
file.path("data", "schema.json"),
overwrite = T)
# Copie des données
file.copy("../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv",
file.path("data", "arrete-cassis.csv"),
overwrite = T)
# Copie du JSON de rues
file.copy("../schema-arrete-circulation-marchandises-private/Cassis/13022-Cassis.geojson",
file.path("data", "13022-Cassis.geojson"),
overwrite = T)
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
inputCSV  <- "../data/arrete-cassis.csv" # CSV géocodé
f <- read_arrete(inputCSV)
html <- f %>% renderArreteOfficial()
writeLines(html, "../outputs/test.html")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding = "UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding = "UTF-8")
CSV2MD(input  = inputCSV,
output = "../outputs/cassis.md")
setwd("C:/Users/mathieu.rajerison/Desktop/TAFF_MAISON/GIT/groum")
# Copie des fonctions
file.copy("../groum-groum/src/shinyapp/libraries.R",
file.path("helpers/imports", "libraries.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/main.R",
file.path("helpers/imports", "main.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/markdown.R",
file.path("helpers/imports", "markdown.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/opening-hours.R",
file.path("helpers/imports", "opening-hours.R"),
overwrite = T)
file.copy("../groum-groum/src/shinyapp/helpers/geocode.R",
file.path("helpers/imports", "geocode.R"),
overwrite = T)
# Copie du schéma
file.copy("../schema-arrete-circulation-marchandises/schema.json",
file.path("data", "schema.json"),
overwrite = T)
# Copie des données
file.copy("../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv",
file.path("data", "arrete-cassis.csv"),
overwrite = T)
# Copie du JSON de rues
file.copy("../schema-arrete-circulation-marchandises-private/Cassis/13022-Cassis.geojson",
file.path("data", "13022-Cassis.geojson"),
overwrite = T)
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding = "UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding = "UTF-8")
CSV2MD(input  = inputCSV,
output = "../outputs/cassis.md")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV  <- "../outputs/arrete-cassis-geo.csv" # CSV géocodé
file.exists(inputCSV)
CSV2GPKG(inputCSV   = inputCSV,
outputGPKG = "../outputs/cassis.gpkg",
geomCol    = "X_GEOM_WKT")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV  <- "../outputs/arrete-cassis-geo.csv" # CSV géocodé
file.exists(inputCSV)
CSV2GPKG(inputCSV   = inputCSV,
outputGPKG = "../outputs/cassis.gpkg",
geomCol    = "X_GEOM_WKT")
rm(list=ls())
library(tidyverse)
library(sf)
library(geojsonsf)
library(stringdist)
library(glue)
library(jsonlite)
library(stringi)
library(lubridate)
library(shiny)
source("../../groum-groum/src/shinyapp/helpers/main.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/libraries.R", encoding="UTF-8")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street      = "Chem. du plan d'Ollive",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street      = "Chem. du plan d'Ollive, esplanade Charles de Gaule",
streetsFile = "../data/13022-Cassis.geojson")
source("../helpers/main.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street = "commune de Cassis")
source("../helpers/main.R")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
geocode_street(street     = "Chem. du plan d'Ollive, commune de Cassis",
streetsFile = "../data/13022-Cassis.geojson")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV <- "../../schema-arrete-circulation-marchandises-private/Cassis/arrete-cassis.csv"
file.exists(inputCSV)
# streets <- "https://raw.githubusercontent.com/mrajerisonCerema/streets-as-geojson/master/OSM/PROVENCE%20ALPES%20COTE%20D%20AZUR/13022-Cassis.geojson"
streets <- "../data/13022-Cassis.geojson"
file.exists(streets)
geocode_CSV(inputCSV  = inputCSV,
streets   = streets,
outputCSV = "../outputs/arrete-cassis2.csv")
read.csv("../outputs/arrete-cassis2.csv", sep=",", encoding = "UTF-8") %>% names
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding = "UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding = "UTF-8")
CSV2MD(input  = inputCSV,
output = "../outputs/cassis.md")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
inputCSV  <- "../data/arrete-cassis.csv" # CSV géocodé
f <- read_arrete(inputCSV)
html <- f %>% renderArreteOfficial()
writeLines(html, "../outputs/test.html")
source("../../groum-groum/src/shinyapp/helpers/markdown.R", encoding="UTF-8")
source("../../groum-groum/src/shinyapp/helpers/opening-hours.R", encoding="UTF-8")
CSV2HTML(input = inputCSV, output = "../outputs/cassis.html")
source("../../groum-groum/src/shinyapp/helpers/geocode.R", encoding="UTF-8")
inputCSV  <- "../outputs/arrete-cassis-geo.csv" # CSV géocodé
file.exists(inputCSV)
CSV2GPKG(inputCSV   = inputCSV,
outputGPKG = "../outputs/cassis.gpkg",
geomCol    = "X_GEOM_WKT")
